version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    networks:
      - hueca-net
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    networks:
      - hueca-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:17
    networks:
      - hueca-net
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Shadin2001
      POSTGRES_DB: la_hueca_del_sabor_db
      PGOPTIONS: -c search_path=der_users,public
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile
    networks:
      - hueca-net
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Shadin2001
      POSTGRES_DB: la_hueca_del_sabor_db
      JWT_SECRET: clave_secreta_segura
      KAFKA_BROKERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  hueca-net:
    driver: bridge

volumes:
  postgres-data:
